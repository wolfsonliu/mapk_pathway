////////////////////////////////////////////////////////////////////////////////
// This file is the head file for Latin Hypercube Sampling.
// Author: Wolfson
// Algorithm: shuffle the data for each dimension,
//            and then choose the data from dimensions by their number.
////////////////////////////////////////////////////////////////////////////////
#include <algorithm>
#include <random>    // std::default_random_engine
#include <chrono>    // std::chrono::system_clock
#include <iostream>
#include <fstream>
#include <stdexcept>
#include <array>
#include <string>
#include <vector>


////////////////////
// Classes
////////////////////

class LatinVector
//// Class: LatinVector
//// get the list of random shuffled values generated by random number.
{
    double upper_limit;
    double lower_limit;
    long sample_num;
    std::vector<double> latin_vector;
    
    //// generateRandomList:
    //// Generate latin hypercube sampling random numbers.
    void generateRandomList();

public:
    LatinVector():
        lower_limit(0.0),
        upper_limit(0.0),
        sample_num(0.0) {}//
    LatinVector(double lower,
                double upper,
                long sample);
    //// operator[]:
    //// Used for subscript operator overloading.
    double &operator[](int i);
    //// setLatin:
    //// Set and generate random values.
    void setLatin(double lower, double upper, long sample);
    //// getLatin:
    //// Return vector of values.
    std::vector<double> getLatin();
    //// shuffleLatin:
    //// Shuffle again.
    void shuffleLatin();
    //// printLatin:
    //// Print vector values to screen.
    void printLatin();
    //// outputLatin:
    //// Output latin vector to file.
    void outputLatin(std::ofstream & outfile);
};
